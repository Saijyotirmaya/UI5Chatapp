<mvc:View
    controllerName="sap.kt.com.minihrsolution.controller.SelfService"
	xmlns:mvc="sap.ui.core.mvc"
	xmlns="sap.uxap"
	xmlns:layout="sap.ui.layout"
	xmlns:core="sap.ui.core"
	xmlns:f="sap.ui.layout.form"
	xmlns:u="sap.ui.unified"
	xmlns:m="sap.m"
>
	<m:Page id="SelfService_id_page">
		<m:headerContent>
			<core:Fragment fragmentName="sap.kt.com.minihrsolution.fragment.Header"  type="XML" />
		</m:headerContent>
		<ObjectPageLayout id="ObjectPageLayout" navigate="onSectionChange" enableLazyLoading="true" useIconTabBar="true" showTitleInHeaderContent="true" upperCaseAnchorBar="false" >
			<headerTitle>
				<ObjectPageDynamicHeaderTitle>
					<expandedHeading>
						<m:Title text="{sEmployeeModel>/0/Salutation} {sEmployeeModel>/0/EmployeeName}" wrapping="true"/>
					</expandedHeading>
					<snappedHeading>
						<m:FlexBox fitContainer="true" alignItems="Center" >
							<m:Avatar
                                src="{path: 'sEmployeeModel>/0/ProfilePhoto', formatter: '.Formatter.getImageSrc'}" class="sapUiTinyMarginEnd" />
							<m:Title text="{sEmployeeModel>/0/Salutation} {sEmployeeModel>/0/EmployeeName}" wrapping="true" />
						</m:FlexBox>
					</snappedHeading>
					<expandedContent>
						<m:Text text="{sEmployeeModel>/0/Designation}" />
					</expandedContent>
					<snappedContent>
						<m:Text text="{sEmployeeModel>/0/Designation}" />
					</snappedContent>
					<snappedTitleOnMobile>
						<m:Title text="{sEmployeeModel>/0/Designation}" />
					</snappedTitleOnMobile>
					<actions>
						<m:Button id="Submit" text="{i18n>submit}" press="onPressSubmit" enabled="{= ${viewModel>/isEditMode} === true ? false : true}" type="Accept" visible="{viewModel>/SelfService}" />
						<m:Button text="{i18n>setProfileBtn}" press="onPressSetPhoto" enabled="{= ${viewModel>/isEditMode} === true ? false : true}" visible="{viewModel>/SetProfile}" type="Ghost" />
                        <m:Button icon="sap-icon://action" text="Actions" press="onOpenActionBtn" id="SS_id_Action"/>
					</actions>
				</ObjectPageDynamicHeaderTitle>
			</headerTitle>
			<headerContent>
				<m:FlexBox wrap="Wrap" direction="Row" fitContainer="true" alignItems="Start" >
					<!-- Avatar Section -->
					<m:VBox
                        class="sapUiSmallMarginEnd"
                        layoutData="{ path: 'sEmployeeModel>', formatter: '.Formatter.getFlexLayoutData' }"
                    >
						<m:Avatar
                            src="{path: 'sEmployeeModel>/0/ProfilePhoto', formatter: '.Formatter.getImageSrc'}"
                            displaySize="L"
                        />
					</m:VBox>
					<!-- Contact Info -->
					<m:VBox
                        class="sapUiSmallMarginBeginEnd"
                        layoutData="sap.ui.layout.FlexItemData"
                        growFactor="1"
                    >
						<m:Text
                            text="{sEmployeeModel>/0/STDCode} {sEmployeeModel>/0/MobileNo}"
                            wrapping="true"
                        />
						<m:Text
                            text="{sEmployeeModel>/0/CompanyEmailID}"
                            wrapping="true"
                        />
					</m:VBox>
					<!-- Permanent Address -->
					<m:VBox
                        class="sapUiSmallMarginBeginEnd"
                        layoutData="sap.ui.layout.FlexItemData"
                        growFactor="1"
                    >
						<m:Label
                            text="{i18n>permanentAddress}"
                            class="TextColor"
                            wrapping="true"
                        />

						<m:Text id="permAddressText"
                            text="{addressModel>/permTruncated}"
                            wrapping="true"
                        />
                          <m:Link id="permToggleLink" text="{addressModel>/permToggleText}" press="onTogglePermanentAddress" visible="{= ${addressModel>/permShowToggle} }" />

					</m:VBox>
					<!-- Correspondence Address -->
					<m:VBox
                        class="sapUiSmallMarginBeginEnd"
                        layoutData="sap.ui.layout.FlexItemData"
                        growFactor="1"
                    >
						<m:Label
                            text="{i18n>correspondenceAddress}"
                            class="TextColor"
                            wrapping="true"
                        />

						<m:Text id="corrAddressText" 
                            text="{addressModel>/corrTruncated}"
                            wrapping="true"
                        />
                          <m:Link id="corrToggleLink" text="{addressModel>/corrToggleText}" press="onToggleCorrespondenceAddress" visible="{= ${addressModel>/corrShowToggle} }" />
					</m:VBox>
				</m:FlexBox>
			</headerContent>
			<sections>
				<ObjectPageSection 
                    titleUppercase="false"
                    id="basicDetailsSection"
                    title="{i18n>basicDetails}"
                >
					<subSections>
						<ObjectPageSubSection
                            id="goalsSS1"
                            titleUppercase="false"
                            title="{i18n>PersonalInformation}"
                        >
							<blocks>
								<f:SimpleForm
                                    id="SS_id_BSimpleForm"
                                    editable="true"
                                    layout="ColumnLayout"
                                    labelSpanXL="12"
                                    labelSpanL="12"
                                    labelSpanM="12"
                                    labelSpanS="12"
                                    adjustLabelSpan="false"
                                    emptySpanXL="0"
                                    emptySpanL="0"
                                    emptySpanM="0"
                                    emptySpanS="0"
                                    columnsXL="2"
                                    columnsL="2"
                                    columnsM="1"
                                    singleContainerFullSize="false"
                                >
									<f:toolbar>
										<m:Toolbar>
											<m:Title
                                                text="{i18n>basicDetails}"
                                            />
											<m:ToolbarSpacer />
											<m:Button
                                                id="BasicDetailsBtn"
                                                text="{= ${viewModel>/isEditMode} ? 'Save' : 'Edit' }"
                                                press="SS_onEditPress"
                                                type="{= ${viewModel>/isEditMode} ? 'Accept' : 'Emphasized' }"
                                                tooltip="{i18n>editDetails}"
                                                visible="{parts: [{ path: 'viewModel>/SelfServiceBtn' },{ path: 'LoginModel>/Role' },{ path: 'sEmployeeModel>/0/Type' } ],formatter: '.Formatter.visibilityFormatter' }"/>

										</m:Toolbar>
									</f:toolbar>
									<f:content>
										<m:Label text="{i18n>employeeID}" />
										<m:Input
                                            value="{sEmployeeModel>/0/EmployeeID}"
                                            editable="false"
                                        />
										<m:Label text="{i18n>employeeName}" />
										<m:Input
                                            value="{sEmployeeModel>/0/Salutation} {sEmployeeModel>/0/EmployeeName}"
                                            editable="false"
                                        />
										<m:Label text="{i18n>joiningDate}" />
										<m:DatePicker
                                            value="{path:'sEmployeeModel>/0/JoiningDate', formatter:'.Formatter.formatDate'}"
                                            displayFormat="dd/MM/yyyy"
                                            valueFormat="dd/MM/yyyy"
                                            id="SS_id_Joinn"
                                            editable="false"
                                        />
                                        <m:Label
                                            text="{i18n>companyMailid}"
                                            required="true"
                                            id="SS_id_lc"
                                        />
										<m:Input
                                            valueStateText="{i18n>emailValueState}"
                                            value="{sEmployeeModel>/0/CompanyEmailID}"
                                            liveChange="SS_validateEmail"
                                            editable="{viewModel>/AdminRole}"
                                            id="SS_id_Compmail"
                                            placeholder="{i18n>companyMailid}"
                                            maxLength="100"
                                        />
                                        <m:Label text="{i18n>fatherName}" />
										<m:Input
                                            value="{sEmployeeModel>/0/FatherName}" editable="{viewModel>/isEditMode}" liveChange="SS_validateName" id="SS_id_FatherName" valueStateText="{i18n>commonNameValueState}"
                                        />
										<m:Label
                                            text="{i18n>dateOfBirth}"
                                            required="true"
                                            id="SS_id_ldob"
                                        />
										<m:DatePicker
                                            value="{path:'sEmployeeModel>/0/DateOfBirth', formatter:'.Formatter.formatDate'}"
                                            displayFormat="dd/MM/yyyy"
                                            valueFormat="dd/MM/yyyy"
                                            change="SS_validateDate"
                                            id="SS_id_Dob"
                                            editable="{viewModel>/isEditMode}"
                                            valueStateText="{i18n>dateValueState}"
                                             initialFocusedDateValue="{controller>/focusedDate}"
				                             maxDate="{controller>/maxDate}"
				                             minDate="{controller>/minDate}"
                                        />
										<m:Label
                                            text="{i18n>bloodGroup}"
                                            required="true"
                                            id="SS_id_lb"
                                        />
										<m:ComboBox
                                            value="{sEmployeeModel>/0/BloodGroup}"
                                            items="{BloodGroup>/bloodgroup}"
                                            id="SS_id_BloodGroup"
                                            change="SS_validateCombo"
                                            valueStateText="{i18n>combovalueState}"
                                            editable="{viewModel>/isEditMode}"
                                        >
											<core:Item
                                                key="{BloodGroup>Code}"
                                                text="{BloodGroup>Code}"
                                            />
										</m:ComboBox>
										<m:Label
                                            text="{i18n>permanentAddress}"
                                            required="true"
                                            id="SS_id_lpa"
                                        />
										<m:TextArea
                                            value="{sEmployeeModel>/0/PermanentAddress}"
                                            editable="{viewModel>/isEditMode}"
                                            id="SS_id_PAddress"
                                            placeholder="{i18n>permanentAddress}"
                                            maxLength="120"
                                            liveChange="SS_ValidateCommonFields"
                                            valueStateText="{i18n>addressValueState}"
                                        />
										<m:Label
                                            text="{i18n>correspondenceAddress}"
                                            required="true"
                                            id="SS_id_lca"
                                        />
										<m:TextArea
                                            value="{sEmployeeModel>/0/CorrespondenceAddress}"
                                            editable="{viewModel>/isEditMode}"
                                            id="SS_id_CAdress"
                                            placeholder="{i18n>correspondenceAddress}"
                                            maxLength="120"
                                            liveChange="SS_ValidateCommonFields"
                                            valueStateText="{i18n>addressValueState}"
                                        />
										<m:Label
                                            text="{i18n>expCountry}"
                                            required="true"
                                            id="SS_id_lcoun"
                                            visible="{viewModel>/RelievingLetter}"
                                        />
										<m:ComboBox
                                            change="SS_onChangeCountry"
                                            valueStateText="{i18n>expValStaCountry}"
                                            id="SS_id_Country"
                                            items="{path:'CountryModel>/',length:1000}"
                                            value="{sEmployeeModel>/0/Country}"
                                            showSecondaryValues="true"
                                            editable="{viewModel>/AdminRole}"
                                            visible="{viewModel>/RelievingLetter}"
                                        >
											<core:ListItem
                                                key="{CountryModel>countryName}"
                                                text="{CountryModel>countryName}"
                                                additionalText="{CountryModel>code}"
                                            />
										</m:ComboBox>
										<m:Label
                                            text="{i18n>baseLocation}"
                                            required="true"
                                            id="SS_id_lbase"
                                        />

                                         <m:ComboBox items="{BaseLocationModel>/}"  showSecondaryValues="true" value="{sEmployeeModel>/0/BaseLocation}" change="SS_onBaseLocationChange" id="SS_id_BaseL" editable="{viewModel>/AdminRole}" valueStateText="{i18n>selectBase}">
						                       <core:ListItem key="{BaseLocationModel>city}" text="{BaseLocationModel>city}" additionalText="{BaseLocationModel>branchCode}" />
				                        </m:ComboBox>
									
										<m:Label text="{i18n>branchCode}" />
										<m:Input id="SS_id_BranchCode"
                                            value="{sEmployeeModel>/0/BranchCode}"
                                            editable="false"
                                        />
										<m:Label
                                            text="{i18n>designation}"
                                            required="true"
                                            id="SS_id_lds"
                                        />
										<m:Select
                                            items="{DesignationModel>/}"
                                            id="SS_id_Desi"
                                            showSecondaryValues="true"
                                            selectedKey="{sEmployeeModel>/0/Designation}"
                                            editable="{viewModel>/AdminRole}"
                                        >
											<core:ListItem
                                                key="{DesignationModel>designationName}"
                                                text="{DesignationModel>designationName}"
                                                additionalText="{DesignationModel>department}"
                                            />
										</m:Select>
										<m:Label
                                            text="{i18n>manager}"
                                            id="SS_id_Lmg"
                                            required="true"
                                        />
										<m:ComboBox
                                            value="{sEmployeeModel>/0/ManagerName}"
                                            showSecondaryValues="true"
                                            id="SS_id_Manager"
                                            editable="{viewModel>/AdminRole}"
                                            items="{empModel>/}"
                                            filterSecondaryValues="true"
                                            change="onManagerChange"
                                            valueStateText="{i18n>selectManager}"
                                        >
											<core:ListItem
                                                key="{empModel>EmployeeID}"
                                                text="{empModel>EmployeeName}"
                                                additionalText="{empModel>EmployeeID}"
                                            />
										</m:ComboBox>
										<m:Label
                                            text="{i18n>mobileNo}"
                                            required="true"
                                            id="SS_id_Lmo"
                                        />
										<m:ComboBox
                                            value="{sEmployeeModel>/0/STDCode}"
                                            showSecondaryValues="true"
                                            id="SS_id_STDCode"
                                            items="{codeModel>/}"
                                            maxLength="5"
                                            filterSecondaryValues="true"
                                            change="SS_validateCombo"
                                            valueStateText="{i18n>combovalueState}"
                                            editable="{viewModel>/isEditMode}"
                                        >
											<core:ListItem
                                                key="{codeModel>country}"
                                                text="{codeModel>calling_code}"
                                                additionalText="{codeModel>country_code}"
                                            />
										</m:ComboBox>
										<m:Input
                                            value="{sEmployeeModel>/0/MobileNo}"
                                            editable="{viewModel>/isEditMode}"
                                            maxLength="10"
                                            id="SS_id_MobileNo"
                                            placeholder="{i18n>mobileNo}"
                                            liveChange="SS_validateMobileNo"
                                            valueStateText="{i18n>mobileNoValueState}"
                                        />
										<m:Label
                                            text="{i18n>role}"
                                            id="SS_id_lr"
                                            visible="{viewModel>/RelievingLetter }"
                                        />
										<m:Select
                                            editable="{viewModel>/AdminRole}"
                                            selectedKey="{sEmployeeModel>/0/Role}"
                                            showSecondaryValues="true"
                                            id="SS_id_RoleEmpSele"
                                            items="{RoleModel>/}"
                                            visible="{viewModel>/RelievingLetter}"
                                            valueStateText="{i18n>combovalueState}"
                                        >
											<core:ListItem
                                                key="{RoleModel>Role}"
                                                text="{RoleModel>Role}"
                                            />
										</m:Select>
										<m:Label
                                            text="{i18n>employeeStatus}"
                                            id="SS_id_les"
                                            required="true"
                                            visible="{viewModel>/ShowStatusControl}"
                                        />
										<m:Select
                                            change="SS_onStatusChange"
                                            id="SS_id_StatusSelf"
                                            editable="{viewModel>/AdminRole}"
                                            selectedKey="{sEmployeeModel>/0/EmployeeStatus}"
                                            items="{StatusEmp>/}"
                                            visible="{viewModel>/ShowStatusControl}"
                                        >
											<core:Item
                                                key="{StatusEmp>Value}"
                                                text="{StatusEmp>Value}"
                                            />
										</m:Select>
										<m:Label
                                            text="{i18n>ResigEndDate}"
                                            required="{= ${sEmployeeModel>/0/EmployeeStatus} === 'Inactive' ? true : false}"
                                            visible="{parts: [{ path: 'sEmployeeModel>/0/ResignationEndDate' },{ path: 'LoginModel>/Role' }], formatter: '.Formatter.resignationEndDateVisible'}"
                                        />
										<m:DatePicker
                                            id="SS_id_ResgEndDate"
                                            value="{path:'sEmployeeModel>/0/ResignationEndDate', formatter:'.Formatter.formatDate'}"
                                            change="onChangeResigEndDate"
                                            displayFormat="dd/MM/yyyy"
                                            valueFormat="dd/MM/yyyy"
                                            editable="false"
                                            visible="{parts: [{ path: 'sEmployeeModel>/0/ResignationEndDate' },{ path: 'LoginModel>/Role' }], formatter: '.Formatter.resignationEndDateVisible'}"
                                        />
									</f:content>
								</f:SimpleForm>
							</blocks>
						</ObjectPageSubSection>
						<ObjectPageSubSection
                            id="goalsSS2"
                            titleUppercase="false"
                            title="{i18n>emergencyDetails}"
                        >
							<blocks>
								<layout:VerticalLayout width="100%">
									<layout:BlockLayout background="Dashboard">
										<layout:BlockLayoutRow>
											<layout:BlockLayoutCell width="2">
												<f:SimpleForm
                                                    editable="true"
                                                    layout="ColumnLayout"
                                                    title="{i18n>personOne}"
                                                    labelSpanXL="4"
                                                    labelSpanL="3"
                                                    labelSpanM="4"
                                                    labelSpanS="12"
                                                    adjustLabelSpan="false"
                                                    emptySpanXL="0"
                                                    emptySpanL="0"
                                                    emptySpanM="0"
                                                    emptySpanS="0"
                                                    columnsXL="2"
                                                    columnsL="2"
                                                    columnsM="1"
                                                    singleContainerFullSize="false"
                                                >
													<f:content>
														<m:Label
                                                            text="{i18n>salutation}"
                                                            id="SS_id_Pf"
                                                        />
														<m:Select
                                                            id="SS_idEmeSalF"
                                                            editable="{viewModel>/isEditMode}"
                                                            selectedKey="{sEmployeeModel>/0/EmergencyContactPerson1Salutation}"
                                                            items="{Salutation>/salutation}"
                                                            width="100%"
                                                        >
															<core:Item
                                                                key="{Salutation>text}"
                                                                text="{Salutation>text}"
                                                            />
														</m:Select>
														<m:Label
                                                            text="{i18n>name}"
                                                            required="true"
                                                            id="SS_id_lName"
                                                        />
														<m:Input
                                                            value="{sEmployeeModel>/0/EmergencyContactPerson1Name}"
                                                            editable="{viewModel>/isEditMode}"
                                                            liveChange="SS_validateName"
                                                            id="SS_id_EmeNameF"
                                                            placeholder="{i18n>placeName}"
                                                            maxLength="50"
                                                            valueStateText="{i18n>commonNameValueState}"
                                                        />
														<m:Label
                                                            text="{i18n>realtion}"
                                                            id="SS_id_Rf"
                                                        />
														<m:Select
                                                            selectedKey="{sEmployeeModel>/0/EmergencyContactPerson1Realtion}"
                                                            items="{RelationModel>/relation}"
                                                            id="SS_idRelF"
                                                            editable="{viewModel>/isEditMode}"
                                                        >
															<core:Item
                                                                key="{RelationModel>Relationship}"
                                                                text="{RelationModel>Relationship}"
                                                            />
														</m:Select>
														<m:Label
                                                            text="{i18n>contact}"
                                                            required="true"
                                                            id="SS_id_Mf"
                                                        />
														<m:ComboBox
                                                            value="{sEmployeeModel>/0/EContactIStdCode}"
                                                            showSecondaryValues="true"
                                                            id="SS_id_STDCodeRI"
                                                            items="{codeModel>/}"
                                                            filterSecondaryValues="true"
                                                            change="Emp_onDesignationChange"
                                                            selectedKey="+91"
                                                            valueStateText="{i18n>combovalueState}"
                                                            editable="{viewModel>/isEditMode}"
                                                        >
															<core:ListItem
                                                                key="{codeModel>country}"
                                                                text="{codeModel>calling_code}"
                                                                additionalText="{codeModel>country_code}"
                                                            />
														</m:ComboBox>
														<m:Input
                                                            value="{sEmployeeModel>/0/EmergencyContactPerson1ContactNo}"
                                                            placeholder="{i18n>mobileNo}"
                                                            editable="{viewModel>/isEditMode}"
                                                            maxLength="10"
                                                            liveChange="SS_validateMobileNo"
                                                            id="SS_id_EmpMoF"
                                                            valueStateText="{i18n>mobileNoValueState}"
                                                        />
														<m:Label
                                                            text="{i18n>address}"
                                                            required="true"
                                                            id="SS_id_Af"
                                                        />
														<m:TextArea
                                                            value="{sEmployeeModel>/0/EmergencyContactPerson1Address}"
                                                            placeholder="{i18n>address}"
                                                            id="SS_id_AddF"
                                                            editable="{viewModel>/isEditMode}"
                                                            liveChange="SS_ValidateCommonFields"
                                                            maxLength="120"                                                           
                                                            valueStateText="{i18n>addressValueState}"
                                                        />
													</f:content>
												</f:SimpleForm>
											</layout:BlockLayoutCell>
											<layout:BlockLayoutCell width="2">
												<f:SimpleForm
                                                    editable="true"
                                                    layout="ColumnLayout"
                                                    title="{i18n>personTwo}"
                                                    labelSpanXL="4"
                                                    labelSpanL="3"
                                                    labelSpanM="4"
                                                    labelSpanS="12"
                                                    adjustLabelSpan="false"
                                                    emptySpanXL="0"
                                                    emptySpanL="0"
                                                    emptySpanM="0"
                                                    emptySpanS="0"
                                                    columnsXL="2"
                                                    columnsL="2"
                                                    columnsM="1"
                                                    singleContainerFullSize="false"
                                                >
													<f:content>
														<m:Label
                                                            text="{i18n>salutation}"
                                                            id="SS_id_Ps"
                                                        />
														<m:Select
                                                            id="SS_idEmeSalS"
                                                            editable="{viewModel>/isEditMode}"
                                                            selectedKey="{sEmployeeModel>/0/EmergencyContactPerson2Salutation}"
                                                            items="{Salutation>/salutation}"
                                                            width="100%"
                                                        >
															<core:Item
                                                                key="{Salutation>text}"
                                                                text="{Salutation>text}"
                                                            />
														</m:Select>
														<m:Label
                                                            text="{i18n>name}"
                                                            required="true"
                                                            id="SS_id_lN"
                                                        />
														<m:Input
                                                            value="{sEmployeeModel>/0/EmergencyContactPerson2Name}"
                                                            editable="{viewModel>/isEditMode}"
                                                            liveChange="SS_validateName"
                                                            id="SS_id_NameS"
                                                            placeholder="{i18n>placeName}"
                                                            maxLength="50"
                                                            valueStateText="{i18n>commonNameValueState}"
                                                        />
														<m:Label
                                                            text="{i18n>realtion}"
                                                        />
														<m:Select
                                                            selectedKey="{sEmployeeModel>/0/EmergencyContactPerson2Realtion}"
                                                            items="{RelationModel>/relation}"
                                                            id="SS_idRelS"
                                                            editable="{viewModel>/isEditMode}"
                                                        >
															<core:Item
                                                                key="{RelationModel>Relationship}"
                                                                text="{RelationModel>Relationship}"
                                                            />
														</m:Select>
														<m:Label
                                                            text="{i18n>contact}"
                                                            required="true"
                                                            id="SS_id_Ms"
                                                        />
														<m:ComboBox
                                                            value="{sEmployeeModel>/0/EContactIIStdCode}"
                                                            showSecondaryValues="true"
                                                            id="SS_id_STDCodeRII"
                                                            items="{codeModel>/}"
                                                            filterSecondaryValues="true"
                                                            change="Emp_onDesignationChange"
                                                            selectedKey="+91"
                                                            valueStateText="{i18n>combovalueState}"
                                                            editable="{viewModel>/isEditMode}"
                                                        >
															<core:ListItem
                                                                key="{codeModel>country}"
                                                                text="{codeModel>calling_code}"
                                                                additionalText="{codeModel>country_code}"
                                                            />
														</m:ComboBox>
														<m:Input
                                                            value="{sEmployeeModel>/0/EmergencyContactPerson2ContactNo}"
                                                            placeholder="{i18n>mobileNo}"
                                                            editable="{viewModel>/isEditMode}"
                                                            maxLength="10"
                                                            liveChange="SS_validateMobileNo"
                                                            id="SS_id_EmpMoS"
                                                            valueStateText="{i18n>mobileNoValueState}"
                                                        />
														<m:Label
                                                            text="{i18n>address}"
                                                            required="true"
                                                            id="SS_id_As"
                                                        />
														<m:TextArea
                                                            value="{sEmployeeModel>/0/EmergencyContactPerson2Address}"
                                                            placeholder="{i18n>address}"
                                                            editable="{viewModel>/isEditMode}"
                                                            maxLength="120"
                                                            id="SS_id_EmpAddS"
                                                            liveChange="SS_ValidateCommonFields"
                                                            valueStateText="{i18n>addressValueState}"
                                                        />
													</f:content>
												</f:SimpleForm>
											</layout:BlockLayoutCell>
										</layout:BlockLayoutRow>
									</layout:BlockLayout>
								</layout:VerticalLayout>
							</blocks>
						</ObjectPageSubSection>
					</subSections>
				</ObjectPageSection>
				<ObjectPageSection
                    titleUppercase="false"
                    id="Document"
                    title="{i18n>Document}"
                >
					<subSections>
						<ObjectPageSubSection
                            titleUppercase="false"
                        >
							<blocks>
								<f:SimpleForm
                                    layout="ColumnLayout"
                                    labelSpanXL="12"
                                    labelSpanL="12"
                                    labelSpanM="12"
                                    labelSpanS="12"
                                    adjustLabelSpan="false"
                                    emptySpanXL="0"
                                    emptySpanL="0"
                                    emptySpanM="0"
                                    emptySpanS="0"
                                    columnsXL="2"
                                    columnsL="2"
                                    columnsM="1"
                                    singleContainerFullSize="false"
                                >
									<f:toolbar>
										<m:Toolbar>
                                        	<m:Title
                                                text="{i18n>bankDetails}"
                                            />

											<m:ToolbarSpacer />
											<m:Button
                                                id="DocumentBtn"
                                                text="{= ${viewModel>/isEditMode} ? 'Save' : 'Edit' }"
                                                press="SS_onEditPress"
                                                type="{= ${viewModel>/isEditMode} ? 'Accept' : 'Emphasized' }"
                                                tooltip="{i18n>editDetails}"
                                                visible="{parts: [{ path: 'viewModel>/SelfServiceBtn' },{ path: 'LoginModel>/Role' },{ path: 'sEmployeeModel>/0/Type' } ],formatter: '.Formatter.visibilityFormatter' }"/>      
                                    </m:Toolbar>
									</f:toolbar>
									<f:content>
										<m:Label
                                            text="{i18n>accountHolder}"
                                            required="true"
                                            id="SS_id_Ah"
                                        />
										<m:Input
                                            value="{sEmployeeModel>/0/AccountHolderName}"
                                            editable="{viewModel>/isEditMode}"
                                            id="SS_id_AcName"
                                            liveChange="SS_validateName"
                                            maxLength="50"
                                            placeholder="{i18n>placeAccountHolder}"
                                            valueStateText="{i18n>accountHolderValueState}"
                                        />
										<m:Label
                                            text="{i18n>accountNo}"
                                            required="true"
                                            id="SS_id_An"
                                        />
										<m:Input
                                            value="{sEmployeeModel>/0/AccountNo}"
                                            editable="{viewModel>/isEditMode}"
                                            id="SS_id_Acno"
                                            liveChange="SS_validateAccountNo"
                                            maxLength="18"
                                            placeholder="{i18n>placeAccountNo}"
                                            valueStateText="{i18n>accountnoValueState}"
                                        />
										<m:Label
                                            text="{i18n>bankName}"
                                            required="true"
                                            id="SS_id_Bn"
                                        />
										<m:Input
                                            value="{sEmployeeModel>/0/BankName}"
                                            editable="{viewModel>/isEditMode}"
                                            id="SS_id_BankName"
                                            maxLength="50"
                                            liveChange="SS_ValidateCommonFields"
                                            placeholder="{i18n>placeBankName}"
                                            valueStateText="{i18n>bankNameValueState}"
                                        />
										<m:Label
                                            text="{i18n>bankBranch}"
                                            required="true"
                                            id="SS_id_Bb"
                                        />
										<m:Input
                                            value="{sEmployeeModel>/0/BankBranch}"
                                            editable="{viewModel>/isEditMode}"
                                            id="SS_id_Branch"
                                            maxLength="50"
                                            liveChange="SS_ValidateCommonFields"
                                            placeholder="{i18n>placeBankBranch}"
                                            valueStateText="{i18n>placeBankBranch}"
                                        />
										<m:Label
                                            text="{i18n>ifscCode}"
                                            required="true"
                                            id="SS_id_Ifc"
                                        />
										<m:Input
                                            value="{sEmployeeModel>/0/IFSCCode}"
                                            editable="{viewModel>/isEditMode}"
                                            id="SS_id_IfcsCode"
                                            liveChange="SS_validateIfcCode"
                                            maxLength="11"
                                            placeholder="{i18n>placeIfscCode}"
                                            valueStateText="{i18n>ifcsCodeValueState}"
                                        />
										<m:Label
                                            text="{i18n>bankAddress}"
                                            required="true"
                                            id="SS_id_Ba"
                                        />
										<m:TextArea
                                            value="{sEmployeeModel>/0/BankAddress}"
                                            editable="{viewModel>/isEditMode}"
                                            id="SS_id_Address"
                                            maxLength="120"
                                            liveChange="SS_ValidateCommonFields"
                                            placeholder="{i18n>placeBankAddress}"
                                            valueStateText="{i18n>addressValueState}"
                                        />
									</f:content>
								</f:SimpleForm>
							</blocks>
						</ObjectPageSubSection>
						<ObjectPageSubSection
                            titleUppercase="false"
                            title="{i18n>PersonalDetails}"
                        >
							<blocks>
								<f:SimpleForm
                                    layout="ColumnLayout"
                                    labelSpanXL="12"
                                    labelSpanL="12"
                                    labelSpanM="12"
                                    labelSpanS="12"
                                    adjustLabelSpan="false"
                                    emptySpanXL="0"
                                    emptySpanL="0"
                                    emptySpanM="0"
                                    emptySpanS="0"
                                    columnsXL="2"
                                    columnsL="2"
                                    columnsM="1"
                                    singleContainerFullSize="false"
                                >
									<f:content>
										<m:Label
                                            text="{i18n>panCardCommon}"
                                            required="true"
                                            id="SS_id_LPan"
                                        />
										<m:Input
                                            value="{sEmployeeModel>/0/PANCard}"
                                            editable="{viewModel>/isEditMode}"
                                            id="SS_id_Pan"
                                            maxLength="10"
                                            liveChange="SS_validatePanCard"
                                            placeholder="{i18n>placePan}"
                                            valueStateText="{i18n>panCardValueState}"
                                        />
										<m:Label
                                            text="{i18n>adharCard}"
                                            required="true"
                                            id="SS_id_LAdhar"
                                        />
										<m:Input
                                            value="{sEmployeeModel>/0/AdharCard}"
                                            editable="{viewModel>/isEditMode}"
                                            id="SS_idAdhar"
                                            maxLength="12"
                                            liveChange="SS_validateAadharCard"
                                            placeholder="{i18n>placeAdhar}"
                                            valueStateText="{i18n>aadharNoValueState}"
                                        />
										<m:Label text="{i18n>passport}" />
										<m:Input
                                            value="{sEmployeeModel>/0/Passport}"
                                            editable="{viewModel>/isEditMode}"
                                            id="SS_id_Passport"
                                            maxLength="8"
                                            liveChange="SS_validatePassport"
                                            placeholder="{i18n>placePassport}"
                                            valueStateText="{i18n>passportNoValueState}"
                                        />
										<m:Label text="{i18n>voterId}" />
										<m:Input
                                            value="{sEmployeeModel>/0/VoterId}"
                                            editable="{viewModel>/isEditMode}"
                                            id="SS_id_Voterid"
                                            maxLength="10"
                                            liveChange="SS_validateVoterId"
                                            placeholder="{i18n>placeVoterId}"
                                            valueStateText="{i18n>voterIdValueState}"
                                        />
									</f:content>
								</f:SimpleForm>
							</blocks>
						</ObjectPageSubSection>
						<ObjectPageSubSection
                            id="personalSS1"
                            title="{i18n>educationalDetails}"
                            titleUppercase="false"
                        >
							<blocks>
								<m:Table
                                    class="sapUiTinyMargin"
                                    growingScrollToLoad="true"
                                    busyIndicatorDelay="0"
                                    width="auto"
                                    items="{ path: 'sEducationModel>/', sorter: {path: 'EducationStartDate', descending: false} }"                                    id="EdF_id_EduTable"
                                    growing="true"
                                    growingThreshold="50"
                                    alternateRowColors="true"
                                    mode="SingleSelectLeft"
                                    selectionChange="EDF_onSelectionChange"
                                >
									<m:headerToolbar>
										<m:OverflowToolbar>
											<m:Title
                                                text="{i18n>educationalDetails} ({= ${sEducationModel>/}.length})"
                                            />
											<m:ToolbarSpacer />
											<m:Button
                                                text="{i18n>add}"
                                                id="EdF_id_EduAdd"
                                                tooltip="{i18n>toolEAddEdu}"
                                                press="EdF_AddEdu"
                                                type="Accept"
                                               visible="{parts: [{ path: 'viewModel>/SelfServiceBtn' },{ path: 'LoginModel>/Role' },{ path: 'sEmployeeModel>/0/Type' } ],formatter: '.Formatter.visibilityFormatter' }"/>
											<m:Button
                                                text="{i18n>edit}"
                                                id="EdF_id_EduEdit"
                                                tooltip="{i18n>toolEEditEdu}"
                                                press="EDF_EditEducation"
                                                type="Emphasized"
                                                visible="{parts: [{ path: 'viewModel>/SelfServiceBtn' },{ path: 'LoginModel>/Role' },{ path: 'sEmployeeModel>/0/Type' } ],formatter: '.Formatter.visibilityFormatter' }"/>
											<m:Button
                                                text="{i18n>delete}"
                                                id="EdF_id_EduDelete"
                                                tooltip="{i18n>toolDeleteEdu}"
                                                press="EdF_DeletEdu"
                                                type="Reject"
                                                visible="{parts: [{ path: 'viewModel>/SelfServiceBtn' },{ path: 'LoginModel>/Role' },{ path: 'sEmployeeModel>/0/Type' } ],formatter: '.Formatter.visibilityFormatter' }"/>
										</m:OverflowToolbar>
									</m:headerToolbar>
									<m:columns>
										<m:Column demandPopin="true">
											<m:Text text="{i18n>collegeName}" />
										</m:Column>
										<m:Column
                                            minScreenWidth="Tablet"
                                            demandPopin="true"
                                        >
											<m:Text text="{i18n>degree}" />
										</m:Column>
										<m:Column
                                            minScreenWidth="Tablet"
                                            demandPopin="true"
                                        >
											<m:Text text="{i18n>grade}" />
										</m:Column>
										<m:Column demandPopin="true">
											<m:Text text="{i18n>startDate}" />
										</m:Column>
										<m:Column
                                            minScreenWidth="Desktop"
                                            demandPopin="true"
                                        >
											<m:Text text="{i18n>endDate}" />
										</m:Column>
									</m:columns>
									<m:items>
										<m:ColumnListItem>
											<m:cells>
												<m:Text
                                                    text="{sEducationModel>CollegeName}"
                                                />
												<m:Text
                                                    text="{sEducationModel>DegreeName}"
                                                />
												<m:Text
                                                    text="{parts: [ { path: 'sEducationModel>Grade' }, { path: 'sEducationModel>GradeType' }],formatter: '.Formatter.formatGradeWithType' }"
                                                />
												<m:Text
                                                    text="{path:'sEducationModel>EducationStartDate' ,formatter:'.Formatter.formatDate'}"
                                                />
												<m:Text
                                                    text="{path:'sEducationModel>EducationEndDate', formatter:'.Formatter.formatDate'}"
                                                />
											</m:cells>
										</m:ColumnListItem>
									</m:items>
								</m:Table>
							</blocks>
						</ObjectPageSubSection>
						<ObjectPageSubSection
                            id="employmentSS1"
                            title="{i18n>employmentDetails}"
                            titleUppercase="false"
                        >
							<blocks>
								<m:Table
                                    class="sapUiTinyMargin"
                                    busyIndicatorDelay="0"
                                    id="EmpF_id_EmpTable"
                                    growingScrollToLoad="true"
                                    width="auto"
                                    items="{ path: 'sEmploymentModel>/', sorter: {path: 'EndDate', descending: true} }"                                    
                                    growing="true"
                                    growingThreshold="50"
                                    alternateRowColors="true"
                                    mode="SingleSelectLeft"
                                    selectionChange="EmpF_onSelectionChange"
                                >
									<m:headerToolbar>
										<m:OverflowToolbar>
											<m:Title
                                                text="{i18n>employmentDetails} ({= ${sEmploymentModel>/}.length})"
                                            />
											<m:ToolbarSpacer />
											<m:Button
                                                id="EmpF_id_RefButton"
                                                visible="{parts: [{ path: 'viewModel>/SelfServiceBtn' },{ path: 'LoginModel>/Role' },{ path: 'sEmployeeModel>/0/Type' } ],formatter: '.Formatter.visibilityFormatter' }"
                                                tooltip="{i18n>referenceDetails}"
                                                press="EmpF_onReferenceDetails"
                                                type="Ghost"
                                                text="{i18n>referenceDetails}"
                                            />
											<m:Button
                                                text="{i18n>add}"
                                                press="EmpF_onAddEmployment"
                                                type="Accept"
                                                tooltip="{i18n>toolAddEmp}"
                                                visible="{parts: [{ path: 'viewModel>/SelfServiceBtn' },{ path: 'LoginModel>/Role' },{ path: 'sEmployeeModel>/0/Type' } ],formatter: '.Formatter.visibilityFormatter' }"
                                            />
											<m:Button
                                                text="{i18n>edit}"
                                                press="EmpF_onEditEmployment"
                                                type="Emphasized"
                                                tooltip="{i18n>toolEditEmp}"
                                                id="EmpF_id_EmpEdit"
                                                visible="{parts: [{ path: 'viewModel>/SelfServiceBtn' },{ path: 'LoginModel>/Role' },{ path: 'sEmployeeModel>/0/Type' } ],formatter: '.Formatter.visibilityFormatter' }"
                                            />
											<m:Button
                                                text="{i18n>delete}"
                                                press="EmpF_onDeletEmployment"
                                                type="Reject"
                                                tooltip="{i18n>toolDelEmp}"
                                                id="EmpF_id_EmpDelete"
                                                visible="{parts: [{ path: 'viewModel>/SelfServiceBtn' },{ path: 'LoginModel>/Role' },{ path: 'sEmployeeModel>/0/Type' } ],formatter: '.Formatter.visibilityFormatter' }"
                                            />
										</m:OverflowToolbar>
									</m:headerToolbar>
									<m:columns>
										<m:Column demandPopin="true">
											<m:Text text="{i18n>companyName}" />
										</m:Column>
										<m:Column
                                            minScreenWidth="Tablet"
                                            demandPopin="true"
                                        >
											<m:Text text="{i18n>designation}" />
										</m:Column>
										<m:Column
                                            minScreenWidth="Tablet"
                                            demandPopin="true"
                                        >
											<m:Text text="{i18n>startDate}" />
										</m:Column>
										<m:Column demandPopin="true">
											<m:Text text="{i18n>endDate}" />
										</m:Column>
										<m:Column
                                            minScreenWidth="Desktop"
                                            demandPopin="true"
                                        >
											<m:Text
                                                text="{i18n>officeAddress}"
                                            />
										</m:Column>
									</m:columns>
									<m:items>
										<m:ColumnListItem>
											<m:cells>
												<m:Text
                                                    text="{sEmploymentModel>CompanyName}"
                                                />
												<m:Text
                                                    text="{sEmploymentModel>Designation}"
                                                />
												<m:Text
                                                    text="{path:'sEmploymentModel>StartDate',formatter:'.Formatter.formatDate'}"
                                                />
												<m:Text
                                                    text="{path:'sEmploymentModel>EndDate',formatter:'.Formatter.formatDate'}"
                                                />
												<m:Text
                                                    text="{sEmploymentModel>OfficeAddress}"
                                                />
											</m:cells>
										</m:ColumnListItem>
									</m:items>
								</m:Table>
							</blocks>
						</ObjectPageSubSection>
					</subSections>
				</ObjectPageSection>
				<ObjectPageSection
                    titleUppercase="false"
                    id="connections1"
                    title="{i18n>Attachment}"
                >
					<subSections>
						<ObjectPageSubSection
                            id="connectionsSS4"
                            titleUppercase="false"
                        >
							<blocks>
								<m:VBox>
									<!-- MessageStrip appears first -->
									<m:MessageStrip
                                        text="{i18n>uploadMsg}"
                                        type="Information"
                                        showIcon="true"
                                        class="sapUiTinyMarginBottom"
                                    />
									<m:Table
                                        id="table-uploadSet"
                                        mode="SingleSelectLeft"
                                        items="{DocumentModel>/items}"
                                        growingThreshold="50"
                                        growing="true"
                                        growingScrollToLoad="true"
                                        alternateRowColors="true"
                                        selectionChange="onSelectionChange"
                                    >
										<m:headerToolbar>
											<m:OverflowToolbar>
												<m:Title
                                                    text="{i18n>Documents} ({= ${DocumentModel>/items}.length})"
                                                    level="H2"
                                                />
												<m:ToolbarSpacer />
												<m:Label
                                                    text="{i18n>documentType}"
                                                    showColon="true"
                                                    required="true"
                                                    visible="{parts: [{ path: 'viewModel>/SelfServiceBtn' },{ path: 'LoginModel>/Role' },{ path: 'sEmployeeModel>/0/Type' } ],formatter: '.Formatter.visibilityFormatter' }"
                                                />
												<m:ComboBox
                                                   visible="{parts: [{ path: 'viewModel>/SelfServiceBtn' },{ path: 'LoginModel>/Role' },{ path: 'sEmployeeModel>/0/Type' } ],formatter: '.Formatter.visibilityFormatter' }"
                                                    items="{DocumentJson>/documents}"
                                                    id="SS_id_DocType"
                                                    change="onDocumentTypeChange"
                                                    valueStateText="{i18n>decumentType}"
                                                >
													<core:Item
                                                        key="{DocumentJson>id}"
                                                        text="{DocumentJson>name}"
                                                    />
												</m:ComboBox>
												<m:ToolbarSeparator />
												<u:FileUploader
                                                    visible="{parts: [{ path: 'viewModel>/SelfServiceBtn' },{ path: 'LoginModel>/Role' },{ path: 'sEmployeeModel>/0/Type' } ],formatter: '.Formatter.visibilityFormatter' }"
                                                    fileSizeExceed="onFileSizeExceeds"
                                                    maximumFileSize="3MB"
                                                    typeMissmatch="onFileTypeMissmatch"
                                                    fileType="pdf,jpg,jpeg,png"
                                                    buttonText="{i18n>upload}"
                                                    change="onBeforeUploadStarts"
                                                    buttonOnly="true"
                                                    sameFilenameAllowed="true"
                                                    iconFirst="true"
                                                />
												<m:Button
                                                    visible="{parts: [{ path: 'viewModel>/SelfServiceBtn' },{ path: 'LoginModel>/Role' },{ path: 'sEmployeeModel>/0/Type' } ],formatter: '.Formatter.visibilityFormatter' }"
                                                    id="downloadSelectedButton"
                                                    text="{i18n>delete}"
                                                    type="Reject"
                                                    press="onDeleteFiles"
                                                    enabled="false"
                                                />
												<m:Button
                                                    id="DeleteSelectedButton"
                                                    text="{i18n>Download}"
                                                    type="Ghost"
                                                    visible="{parts: [{ path: 'viewModel>/SelfServiceBtn' },{ path: 'LoginModel>/Role' },{ path: 'sEmployeeModel>/0/Type' } ],formatter: '.Formatter.visibilityFormatter' }"
                                                    press="onDownloadFiles"
                                                    enabled="false"
                                                />
											</m:OverflowToolbar>
										</m:headerToolbar>
										<m:columns>
											<m:Column demandPopin="true">
												<m:Label
                                                    text="{i18n>fileName}"
                                                />
											</m:Column>
											<m:Column demandPopin="true">
												<m:Label
                                                    text="{i18n>documentType}"
                                                />
											</m:Column>
											<m:Column
                                                minScreenWidth="Tablet"
                                                demandPopin="true"
                                            >
												<m:Label
                                                    text="{i18n>createdBy}"
                                                />
											</m:Column>
											<m:Column
                                                demandPopin="true"
                                                minScreenWidth="Tablet"
                                            >
												<m:Label
                                                    text="{i18n>qCreateDate}"
                                                />
											</m:Column>
										</m:columns>
										<m:items>
											<m:ColumnListItem>
												<m:cells>
													<m:Link
                                                        text="{DocumentModel>FileName}"
                                                        press="openPreviewDocument"
                                                    />
													<m:Text
                                                        text="{DocumentModel>DocumentType}"
                                                    />
													<m:Text
                                                        text="{DocumentModel>CreatedBy}"
                                                    />
													<m:Text
                                                        text="{path:'DocumentModel>CreatedOn', formatter:'.Formatter.formatDate'}"
                                                    />
												</m:cells>
											</m:ColumnListItem>
										</m:items>
									</m:Table>
								</m:VBox>
							</blocks>
						</ObjectPageSubSection>
					</subSections>
				</ObjectPageSection>
				<ObjectPageSection
                    titleUppercase="false"
                    id="idSalaryDetails"
                    title="{i18n>salaryDetails}"
                   visible="{= !${viewModel>/TraineeRole} }">

					<subSections>
						<ObjectPageSubSection
                            title=""
                            titleUppercase="false"
                        >
							<blocks>
								<m:VBox id="salaryVBox" />
							</blocks>
						</ObjectPageSubSection>
					</subSections>
				</ObjectPageSection>
				<ObjectPageSection
                    titleUppercase="false"
                    id="connections"
                    title="{i18n>paySlip}"
                    visible="{viewModel>/ResignationVisible}">
					<subSections>
						<ObjectPageSubSection
                            id="connectionsSS"
                            titleUppercase="false"
                        >
							<m:Table
                                id="SS_id_PaySlipTable"
                                busyIndicatorDelay="0"
                                growing="true"
                                growingThreshold="50"
                                growingScrollToLoad="true"
                                items="{
                                    path: 'PaySlip>/EmpTable',
                                    sorter: {
                                        path: 'FinancialYear',
                                        descending: false,
                                        group: true
                                    }
                                }"
                            >
								<m:columns>
									<m:Column>
										<m:Text text="{i18n>monthAndYear}" />
									</m:Column>
									<m:Column demandPopin="true" minScreenWidth="Desktop" width="10%">
										<m:Text text="{i18n>payableDays}" />
									</m:Column>
									<m:Column hAlign="End" demandPopin="true" minScreenWidth="Tablet">
										<m:Text text="{i18n>totalEarningAmount}" />
									</m:Column>
									<m:Column hAlign="End" demandPopin="true" minScreenWidth="Tablet"> 
										<m:Text text="{i18n>totalDeductionAmount}" />
									</m:Column>
									<m:Column hAlign="End">
										<m:Text text="{i18n>netPay}" />
									</m:Column>
								</m:columns>
								<m:items>
									<m:ColumnListItem
                                        type="Navigation"
                                        press="SS_onPressPayslipRow"
                                    >
										<m:cells>
											<m:Text text="{path: 'PaySlip>YearMonth', formatter: '.Formatter.formatMonthYear'}"/>
										</m:cells>
										<m:cells>
											<m:Text text="{PaySlip>PayableDays}" />
										</m:cells>
                                        <m:cells>
                                            <m:Text text="{path: 'PaySlip>EarningsTotalMonthly', formatter: '.Formatter.CurrencyInINRText'}" />
                                        </m:cells>
                                        <m:cells>
                                            <m:Text text="{path: 'PaySlip>DeductionsTotalMonthly', formatter: '.Formatter.CurrencyInINRText'}" />
                                        </m:cells>
                                        <m:cells>
                                            <m:Text text="{path: 'PaySlip>NetPay', formatter: '.Formatter.CurrencyInINRText'}" />
                                        </m:cells>
									</m:ColumnListItem>
								</m:items>
							</m:Table>
						</ObjectPageSubSection>
					</subSections>
				</ObjectPageSection>
			</sections>
		</ObjectPageLayout>
		<m:footer>
			<m:Bar>
				<m:contentLeft>
					<core:Fragment
                        fragmentName="sap.kt.com.minihrsolution.fragment.Footer"
                        type="XML"
                    />
				</m:contentLeft>
			</m:Bar>
		</m:footer>
	</m:Page>
</mvc:View>
